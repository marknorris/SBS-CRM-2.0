{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\tx560\pardeftab560\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0        \cf2 /*\
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^\{ \
        \
                // get communication details from the server and save them into the communicationArray\
                NSError *error;\
                NSURL *url = [[NSURL alloc] initWithString:[appURL stringByAppendingFormat:@"/service1.asmx/searchCommunicationByContactID?contactID=%@",contactDetail.contactID]];\
                \
                //indicate data is being retrieved via internet\
                UIApplication *app = [UIApplication sharedApplication];  \
                [app setNetworkActivityIndicatorVisible:YES]; \
                \
                NSString *xmlString = [[NSString alloc] initWithContentsOfURL:url encoding:NSUTF8StringEncoding error:nil];\
                \
                [app setNetworkActivityIndicatorVisible:NO]; \
                \
                NSLog(@"xml: %@  end of xml", xmlString);\
                //remove xmlns from the xml file \
                xmlString = [xmlString stringByReplacingOccurrencesOfString:@"xmlns" withString:@"noNSxml"];\
                NSData *xmlData = [xmlString dataUsingEncoding:NSUTF8StringEncoding];\
                DDXMLDocument *communicationDocument = [[DDXMLDocument alloc] initWithData:xmlData options:0 error:&error];\
                \
                //if company has not been sent (user has clicked on "Our Contact") then retrieve from server\
                DDXMLDocument *companiesDocument;\
                \
                \
                if (!company) // need company when the user has come from a user search.\
                \{\
                    // show the network activity indicator again\
                    company = [[companySearch alloc] init];\
                    [app setNetworkActivityIndicatorVisible:YES]; \
                    url = [[NSURL alloc] initWithString:[appURL stringByAppendingFormat:@"/service1.asmx/searchCompaniesByCompanySiteID?companySiteID=%@",contactDetail.companySiteID]];\
                    xmlString = [[NSString alloc] initWithContentsOfURL:url encoding:NSUTF8StringEncoding error:nil];\
                    //remove xmlns from the xml file \
                    xmlString = [xmlString stringByReplacingOccurrencesOfString:@"xmlns" withString:@"noNSxml"];\
                    NSLog(@"xml: %@  end of xml", xmlString);\
                    xmlData = [xmlString dataUsingEncoding:NSUTF8StringEncoding];\
                    companiesDocument = [[DDXMLDocument alloc] initWithData:xmlData options:0 error:&error];\
                    [app setNetworkActivityIndicatorVisible:NO]; \
                \}\
            \
                        //when the data has been fetched display it (using main queue):\
                        dispatch_sync(dispatch_get_main_queue(), ^\{\
                            \
                            \
                            NSArray* nodes = nil;\
                            nodes = [[communicationDocument rootElement] children];\
                            \
                            communicationArray = [[NSMutableArray alloc] init];\
                            for (DDXMLElement *element in nodes)\
                            \{ \
                                communicationSearch *communication = [[communicationSearch alloc] init];\
                                DDXMLElement *contactID = [[element nodesForXPath:@"contactID" error:nil] objectAtIndex:0];\
                                communication.contactID = contactID.stringValue;\
                                DDXMLElement *communicationNumberID = [[element nodesForXPath:@"communicationNumberID" error:nil] objectAtIndex:0];\
                                communication.communicationNumberID = communicationNumberID.stringValue;\
                                DDXMLElement *cmnEmail = [[element nodesForXPath:@"cmnEmail" error:nil] objectAtIndex:0];\
                                communication.cmnEmail = cmnEmail.stringValue;\
                                DDXMLElement *cmnInternationalCode = [[element nodesForXPath:@"cmnInternationalCode" error:nil] objectAtIndex:0];\
                                communication.cmnInternationalCode = cmnInternationalCode.stringValue;\
                                DDXMLElement *cmnAreaCode = [[element nodesForXPath:@"cmnAreaCode" error:nil] objectAtIndex:0];\
                                communication.cmnAreaCode = cmnAreaCode.stringValue;\
                                DDXMLElement *cmnNumber = [[element nodesForXPath:@"cmnNumber" error:nil] objectAtIndex:0];\
                                communication.cmnNumber = cmnNumber.stringValue;\
                                DDXMLElement *cotDescription = [[element nodesForXPath:@"cotDescription" error:nil] objectAtIndex:0];\
                                communication.cotDescription = cotDescription.stringValue;\
                                NSLog(@" communication description: %@", communication.cotDescription);\
                                \
                                //if the communication is of type UserWebPassword, don't display it.\
                                if (![communication.cotDescription isEqualToString:@"UserWebPassword"]) \
                                    [communicationArray addObject:communication];\
                            \}\
                            \
                            if (!company.companySiteID) //check again that company needs to be created and set it up\
                            \{\
                                NSArray* nodes2 = nil;\
                                nodes2 = [[companiesDocument rootElement] children];\
                                \
                                for (DDXMLElement *element in nodes2)\
                                \{ \
                                    company = [[companySearch alloc] init];\
                                    DDXMLElement *companySiteID = [[element nodesForXPath:@"companySiteID" error:nil] objectAtIndex:0];\
                                    company.companySiteID = companySiteID.stringValue;\
                                    DDXMLElement *coaCompanyName = [[element nodesForXPath:@"coaCompanyName" error:nil] objectAtIndex:0];\
                                    company.coaCompanyName = coaCompanyName.stringValue;\
                                    DDXMLElement *cosSiteName = [[element nodesForXPath:@"cosSiteName" error:nil] objectAtIndex:0];\
                                    company.cosSiteName = cosSiteName.stringValue;     \
                                    DDXMLElement *cosDescription = [[element nodesForXPath:@"cosDescription" error:nil] objectAtIndex:0];\
                                    company.cosDescription = cosDescription.stringValue;  \
                                    DDXMLElement *addStreetAddress = [[element nodesForXPath:@"addStreetAddress" error:nil] objectAtIndex:0];\
                                    company.addStreetAddress = addStreetAddress.stringValue; \
                                    DDXMLElement *addStreetAddress2 = [[element nodesForXPath:@"addStreetAddress2" error:nil] objectAtIndex:0];\
                                    company.addStreetAddress2 = addStreetAddress2.stringValue; \
                                    DDXMLElement *addStreetAddress3 = [[element nodesForXPath:@"addStreetAddress3" error:nil] objectAtIndex:0];\
                                    company.addStreetAddress3 = addStreetAddress3.stringValue; \
                                    DDXMLElement *addTown = [[element nodesForXPath:@"addTown" error:nil] objectAtIndex:0];\
                                    company.addTown = addTown.stringValue;  \
                                    DDXMLElement *addCounty = [[element nodesForXPath:@"addCounty" error:nil] objectAtIndex:0];\
                                    company.addCounty = addCounty.stringValue; \
                                    DDXMLElement *addPostCode = [[element nodesForXPath:@"addPostCode" error:nil] objectAtIndex:0];\
                                    company.addPostCode = addPostCode.stringValue; \
                                    DDXMLElement *couCountryName = [[element nodesForXPath:@"couCountryName" error:nil] objectAtIndex:0];\
                                    company.couCountryName = couCountryName.stringValue; \
                                \}\
                            \}\
                            NSLog(@"company.cosSiteName: %@",company.cosSiteName);\
                            siteNameDescriptionOutlet.text = [company.cosSiteName stringByAppendingFormat:@" - %@",company.cosDescription];\
                            //ensure the data is displayed.\
                            [self.tableView reloadData];\
                        \});\
        \});*/}